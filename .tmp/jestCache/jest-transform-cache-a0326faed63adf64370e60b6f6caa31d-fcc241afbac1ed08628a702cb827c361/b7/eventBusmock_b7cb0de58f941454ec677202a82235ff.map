{"file":"/home/optivamedia/Documents/Personal/bank-account-manager/server/contexts/shared/__mocks__/eventBus.mock.ts","mappings":"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","names":[],"sources":["/home/optivamedia/Documents/Personal/bank-account-manager/server/contexts/shared/__mocks__/eventBus.mock.ts"],"sourcesContent":["/* eslint-disable jest/no-standalone-expect */\n/* eslint-disable class-methods-use-this */\nimport { EventBus } from '@shared/domain/bus/event/eventBus';\nimport { DomainEvent } from '@shared/domain/bus/event/domainEvent';\nimport { DomainEventSubscriber } from '@shared/domain/bus/event/domainEventSubscriber';\n\nexport default class EventBusMock implements EventBus {\n    private publishSpy = jest.fn();\n\n    async publish(events: DomainEvent[]): Promise<void> {\n        this.publishSpy(events);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addSubscribers(_subscribers: DomainEventSubscriber<DomainEvent>[]): void {\n        //\n    }\n\n    assertLastPublishedEventIs(expectedEvent: DomainEvent): void {\n        const publishSpyCalls = this.publishSpy.mock.calls,\n            lastPublishSpyCall = publishSpyCalls[publishSpyCalls.length - 1],\n            lastPublishedEvent = lastPublishSpyCall[0][0];\n\n        expect(publishSpyCalls.length).toBeGreaterThan(0);\n\n        expect(this.getDataFromDomainEvent(expectedEvent)).toMatchObject(\n            this.getDataFromDomainEvent(lastPublishedEvent)\n        );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    assertLastPublishedEventTypeIs(type: any): void {\n        const publishSpyCalls = this.publishSpy.mock.calls;\n\n        expect(publishSpyCalls.length).toBeGreaterThan(0);\n\n        // eslint-disable-next-line one-var\n        const lastPublishSpyCall = publishSpyCalls[publishSpyCalls.length - 1],\n            lastPublishedEvent = lastPublishSpyCall[0][0];\n\n        expect(lastPublishedEvent).toBeInstanceOf(type);\n    }\n\n    assertLastPublishedEventsAre(events: DomainEvent[]): void {\n        const publishSpyCalls = this.publishSpy.mock.calls,\n            lastPublishSpyCall = publishSpyCalls[publishSpyCalls.length - 1],\n            lastPublishedEvents = lastPublishSpyCall[0];\n\n        expect(publishSpyCalls.length).toBeGreaterThan(0);\n        expect(lastPublishedEvents).toHaveLength(events.length);\n\n        lastPublishedEvents.forEach((publishedEvent: DomainEvent, i: number) => {\n            const expectedEvent = events[i];\n\n            expect(this.getDataFromDomainEvent(expectedEvent)).toMatchObject(\n                this.getDataFromDomainEvent(publishedEvent)\n            );\n        });\n    }\n\n    assertPublishedEventsAre(events: DomainEvent[]): void {\n        const { mock } = this.publishSpy,\n            callsArgument = mock.calls.map((c) => this.getDataFromDomainEvent(c[0][0]));\n\n        expect(mock.calls).toHaveLength(events.length);\n\n        events.forEach((e) => {\n            expect(callsArgument).toContainEqual(this.getDataFromDomainEvent(e));\n        });\n    }\n\n    assertEmptyPublished(): void {\n        const publishSpyCalls = this.publishSpy.mock.calls,\n            lastPublishSpyCall = publishSpyCalls[publishSpyCalls.length - 1],\n            lastPublishedEvents = lastPublishSpyCall[0];\n\n        expect(lastPublishedEvents).toHaveLength(0);\n    }\n\n    assertNothingPublished(): void {\n        const publishSpyCalls = this.publishSpy.mock.calls;\n\n        expect(publishSpyCalls).toHaveLength(0);\n    }\n\n    private getDataFromDomainEvent(event: DomainEvent): any {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { eventId, occurredOn, ...attributes } = event;\n\n        return attributes;\n    }\n}\n"],"version":3}