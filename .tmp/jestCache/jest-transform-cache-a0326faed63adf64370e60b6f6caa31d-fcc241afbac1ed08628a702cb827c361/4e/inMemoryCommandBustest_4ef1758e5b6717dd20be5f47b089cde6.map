{"file":"/home/optivamedia/Documents/Personal/bank-account-manager/server/contexts/shared/infrastructure/commandBus/inMemoryCommandBus.test.ts","mappings":";;;;;AAAA,2CAA2C;AAC3C,yCAAyC;AACzC,iFAAyD;AAEzD,qHAA6F;AAC7F,8HAAsG;AACtG,8GAAsF;AAEtF,MAAM,gBAAiB,SAAQ,iBAAO;;AAC3B,6BAAY,GAAG,mBAAmB,CAAC;AAG9C,MAAM,cAAe,SAAQ,iBAAO;;AACzB,2BAAY,GAAG,iBAAiB,CAAC;AAG5C,MAAM,gBAAgB;IAClB,YAAY;QACR,OAAO,cAAc,CAAC;IAC1B,CAAC;IAED,kGAAkG;IAClG,KAAK,CAAC,MAAM,CAAC,QAAwB,IAAkB,CAAC;CAC3D;AAED,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAChC,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,CAAC,aAAa,EAAE,CAAC;QAEvB,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,EAC3C,0BAA0B,GAAG,IAAI,oCAA0B,CAAC,EAAE,CAAC,EAC/D,UAAU,GAAG,IAAI,4BAAkB,CAAC,0BAA0B,CAAC,CAAC;QAEpE,IAAI,SAAS,GAAQ,IAAI,CAAC;QAE1B,IAAI;YACA,MAAM,UAAU,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;SAC/C;QAAC,OAAO,KAAK,EAAE;YACZ,SAAS,GAAG,KAAK,CAAC;SACrB;QAED,MAAM,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,mCAAyB,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAC1B,oEAAoE,CACvE,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,4EAA4E;IAC5E,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,EACvC,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,EACzC,0BAA0B,GAAG,IAAI,oCAA0B,CAAC;YACxD,gBAAgB;SACnB,CAAC,EACF,UAAU,GAAG,IAAI,4BAAkB,CAAC,0BAA0B,CAAC,CAAC;QAEpE,MAAM,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["/home/optivamedia/Documents/Personal/bank-account-manager/server/contexts/shared/infrastructure/commandBus/inMemoryCommandBus.test.ts"],"sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\nimport Command from '@shared/domain/bus/command/command';\nimport { CommandHandler } from '@shared/domain/bus/command/commandHandler';\nimport CommandNotRegisteredError from '@shared/domain/bus/command/commandNotRegisteredError';\nimport CommandHandlersInformation from '@shared/infrastructure/commandBus/commandHandlersInformation';\nimport InMemoryCommandBus from '@shared/infrastructure/commandBus/inMemoryCommandBus';\n\nclass UnhandledCommand extends Command {\n    static COMMAND_NAME = 'unhandled.command';\n}\n\nclass HandledCommand extends Command {\n    static COMMAND_NAME = 'handled.command';\n}\n\nclass MyCommandHandler implements CommandHandler<HandledCommand> {\n    subscribedTo(): HandledCommand {\n        return HandledCommand;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function,@typescript-eslint/no-unused-vars\n    async handle(_command: HandledCommand): Promise<void> {}\n}\n\ndescribe('inMemoryCommandBus', () => {\n    it('throws an error if dispatches a command without handler', async () => {\n        expect.hasAssertions();\n\n        const unhandledCommand = new UnhandledCommand(),\n            commandHandlersInformation = new CommandHandlersInformation([]),\n            commandBus = new InMemoryCommandBus(commandHandlersInformation);\n\n        let exception: any = null;\n\n        try {\n            await commandBus.dispatch(unhandledCommand);\n        } catch (error) {\n            exception = error;\n        }\n\n        expect(exception).toBeInstanceOf(CommandNotRegisteredError);\n        expect(exception.message).toBe(\n            \"The command <UnhandledCommand> hasn't a command handler associated\"\n        );\n    });\n\n    // eslint-disable-next-line jest/prefer-expect-assertions,jest/expect-expect\n    it('accepts a command with handler', async () => {\n        const handledCommand = new HandledCommand(),\n            myCommandHandler = new MyCommandHandler(),\n            commandHandlersInformation = new CommandHandlersInformation([\n                myCommandHandler\n            ]),\n            commandBus = new InMemoryCommandBus(commandHandlersInformation);\n\n        await commandBus.dispatch(handledCommand);\n    });\n});\n"],"version":3}